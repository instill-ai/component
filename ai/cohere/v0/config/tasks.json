{
  "$defs": {
    "multi-modal-content": {
      "instillFormat": "structured/multi-modal-content",
      "items": {
        "properties": {
          "image-url": {
            "properties": {
              "url": {
                "description": "Either a URL of the image or the base64 encoded image data.",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object"
          },
          "text": {
            "description": "The text content.",
            "instillFormat": "string",
            "type": "string"
          },
          "type": {
            "description": "The type of the content part.",
            "enum": [
              "text",
              "image_url"
            ],
            "instillFormat": "string",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "chat-message": {
      "properties": {
        "content": {
          "$ref": "#/$defs/multi-modal-content",
          "description": "The message content",
          "instillUIOrder": 1,
          "title": "Content"
        },
        "role": {
          "description": "The message role, i.e. 'system', 'user' or 'assistant'",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Role",
          "type": "string"
        }
      },
      "required": [
        "role",
        "content"
      ],
      "title": "Chat Message",
      "type": "object"
    },
    "common": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "image-base64",
        "model-name"
      ],
      "instillUIOrder": 0,
      "properties": {
        "image-base64": {
          "description": "Image base64",
          "instillAcceptFormats": [
            "image/*"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference"
          ],
          "title": "Image",
          "type": "string"
        },
        "model-name": {
          "description": "The Instill Model model to be used.",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        }
      },
      "required": [
        "image-base64",
        "model-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "citation": {
      "properties": {
        "start": {
          "description": "The start position of the citation",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 0,
          "title": "Start",
          "type": "integer"
        },
        "end": {
          "description": "The end position of the citation",
          "instillFormat": "integer",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 1,
          "title": "End",
          "type": "integer"
        },
        "text": {
          "description": "The text body of the citation",
          "instillFormat": "string",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 2,
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "start",
        "end",
        "text"
      ],
      "title": "Citation",
      "type": "object"
    },
    "usage": {
      "description": "Token Usage on the Cohere Platform",
      "instillUIOrder": 1,
      "properties": {
        "input-tokens": {
          "description": "The input tokens used by Cohere Models",
          "instillFormat": "number",
          "instillUIOrder": 2,
          "title": "Input Tokens",
          "type": "number"
        },
        "output-tokens": {
          "description": "The output tokens generated by Cohere Models",
          "instillFormat": "number",
          "instillUIOrder": 3,
          "title": "Output Tokens",
          "type": "number"
        }
      },
      "required": [
        "input-tokens",
        "output-tokens"
      ],
      "title": "Usage",
      "type": "object"
    }
  },
  "TASK_TEXT_GENERATION_CHAT": {
    "instillShortDescription": "Provide text outputs in response to text inputs.",
    "description": "Cohere's text generation models (often called generative pre-trained transformers or large language models) have been trained to understand natural language, code, and images. The models provide text outputs in response to their inputs. The inputs to these models are also referred to as \"prompts\". Designing a prompt is essentially how you \u201cprogram\u201d a large language model model, usually by providing instructions or some examples of how to successfully complete a task.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "prompt",
        "model-name"
      ],
      "instillUIOrder": 0,
      "properties": {
        "chat-history": {
          "description": "Incorporate external chat history, specifically previous messages within the conversation. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'USER' or 'CHATBOT'\", \"content\": \"message content\"}.",
          "instillAcceptFormats": [
            "structured/chat-messages"
          ],
          "instillShortDescription": "Incorporate external chat history, specifically previous messages within the conversation. (Note: As for 2024-06-24 Cohere models are not multimodal, so images will be ignored.)",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "$ref": "#/$defs/chat-message"
          },
          "title": "Chat history",
          "type": "array"
        },
        "max-new-tokens": {
          "default": 50,
          "description": "The maximum number of tokens for model to generate (default=50)",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Max new tokens",
          "type": "integer"
        },
        "model-name": {
          "enum": [
            "command-r-plus",
            "command-r",
            "command",
            "command-light"
          ],
          "example": "command-r-plus",
          "description": "The Cohere command model to be used",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        },
        "prompt": {
          "description": "The prompt text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt",
          "type": "string"
        },
        "prompt-images": {
          "description": "The prompt images (Note: As for 2024-06-24 Cohere models are not multimodal, so images will be ignored.)",
          "instillAcceptFormats": [
            "array:image/*"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "title": "Prompt Images",
          "type": "array"
        },
        "seed": {
          "description": "The seed",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Seed",
          "type": "integer"
        },
        "system-message": {
          "default": "You are a helpful assistant.",
          "description": "The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide specific instructions about how it should behave throughout the conversation. By default, the model\u2019s behavior is using a generic message as \"You are a helpful assistant.\"",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The system message helps set the behavior of the assistant",
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "System message",
          "type": "string"
        },
        "temperature": {
          "default": 0.7,
          "description": "The temperature for sampling (default=0.7)",
          "instillAcceptFormats": [
            "number"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Temperature",
          "type": "number"
        },
        "top-k": {
          "default": 10,
          "description": "Top k for sampling (default=10)",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Top K",
          "type": "integer"
        },
        "documents": {
          "description": "The documents to be used for the model, for optimal performance, the length of each document should be less than 300 words.",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "title": "Documents",
          "type": "array"
        }
      },
      "required": [
        "prompt",
        "model-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "description": "Model Output",
          "instillUIOrder": 0,
          "instillFormat": "string",
          "instillUIMultiline": true,
          "title": "Text",
          "type": "string"
        },
        "citations": {
          "description": "Citations",
          "instillUIOrder": 1,
          "instillAcceptFormats": [
            "structured/citations"
          ],
          "title": "Citations",
          "type": "array",
          "items": {
            "$ref": "#/$defs/citation"
          }
        },
        "usage": {
          "$ref": "#/$defs/usage"
        }
      },
      "required": [
        "text"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_EMBEDDINGS": {
    "instillShortDescription": "Turn text into a vector of numbers that capture its meaning, unlocking use cases like semantic search.",
    "description": "An embedding is a list of floating point numbers that captures semantic information about the text that it represents.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "model-name": {
          "enum": [
            "embed-english-v3.0",
            "embed-multilingual-v3.0",
            "embed-english-light-v3.0",
            "embed-multilingual-light-v3.0"
          ],
          "example": "embed-multilingual-v3.0",
          "description": "The Cohere embed model to be used",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        },
        "text": {
          "description": "The text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Text",
          "type": "string"
        },
        "input-type": {
          "enum": [
            "search_document",
            "search_query",
            "classification",
            "clustering"
          ],
          "example": "embed-multilingual-v3.0",
          "description": "Specifies the type of input passed to the model",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Input Type",
          "type": "string"
        }
      },
      "required": [
        "text",
        "model-name",
        "input-type"
      ],
      "instillEditOnNodeFields": [
        "text",
        "model-name",
        "input-type"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "embedding": {
          "instillFormat": "array:number",
          "items": {
            "instillFormat": "number",
            "title": "Embedding",
            "type": "number"
          },
          "type": "array",
          "description": "Embedding of the input text",
          "instillUIOrder": 0,
          "title": "Embedding"
        },
        "usage": {
          "$ref": "#/$defs/usage"
        }
      },
      "required": [
        "embedding"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_RERANKING": {
    "instillShortDescription": "Sort text inputs by semantic relevance to a specified query.",
    "description": "Rerank models sort text inputs by semantic relevance to a specified query. They are often used to sort search results returned from an existing search solution.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "model-name": {
          "enum": [
            "rerank-english-v3.0",
            "rerank-multilingual-v3.0"
          ],
          "example": "rerank-multilingual-v3.0",
          "description": "The Cohere rerank model to be used",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Model Name",
          "type": "string"
        },
        "query": {
          "description": "The query",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": false,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Query",
          "type": "string"
        },
        "documents": {
          "description": "The documents to be used for reranking",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "title": "Documents",
          "type": "array"
        },
        "top-n": {
          "default": 3,
          "description": "The number of most relevant documents or indices to return. Defaults to the length of the documents (default=3)",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Top N",
          "type": "integer"
        },
        "max-chunks-per-doc": {
          "default": 10,
          "description": "The maximum number of chunks to produce internally from a document (default=10)",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Maximum number of chunks per document",
          "type": "integer"
        }
      },
      "required": [
        "query",
        "model-name",
        "documents"
      ],
      "instillEditOnNodeFields": [
        "query",
        "model-name",
        "documents"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "ranking": {
          "instillFormat": "array:string",
          "items": {
            "instillFormat": "string",
            "title": "Documents",
            "type": "string"
          },
          "type": "array",
          "description": "Reranked documents",
          "instillUIOrder": 0,
          "title": "Reranked documents"
        },
        "usage": {
          "$ref": "#/$defs/usage"
        }
      },
      "required": [
        "ranking"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
