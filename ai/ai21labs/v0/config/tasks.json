{
  "$defs": {
    "multi-modal-content": {
      "instillFormat": "structured/multi-modal-content",
      "items": {
        "properties": {
          "image-url": {
            "properties": {
              "url": {
                "description": "Either a URL of the image or the base64 encoded image data.",
                "type": "string"
              }
            },
            "required": [
              "url"
            ],
            "type": "object"
          },
          "text": {
            "description": "The text content.",
            "instillFormat": "string",
            "type": "string"
          },
          "type": {
            "description": "The type of the content part.",
            "enum": [
              "text",
              "image_url"
            ],
            "instillFormat": "string",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "chat-message": {
      "properties": {
        "content": {
          "$ref": "#/$defs/multi-modal-content",
          "description": "The message content",
          "instillUIOrder": 1,
          "title": "Content"
        },
        "role": {
          "description": "The message role, i.e. 'system', 'user' or 'assistant'",
          "instillFormat": "string",
          "instillUIOrder": 0,
          "title": "Role",
          "type": "string"
        }
      },
      "required": [
        "role",
        "content"
      ],
      "title": "Chat Message",
      "type": "object"
    },
    "usage": {
      "description": "Usage tokens in AI21labs",
      "instillUIOrder": 1,
      "properties": {
        "input-tokens": {
          "description": "The input tokens read by AI21labs model",
          "instillFormat": "number",
          "instillUIOrder": 2,
          "title": "Input Tokens",
          "type": "number"
        },
        "output-tokens": {
          "description": "The output tokens generated by AI21labs model",
          "instillFormat": "number",
          "instillUIOrder": 3,
          "title": "Output Tokens",
          "type": "number"
        }
      },
      "required": [
        "input-tokens",
        "output-tokens"
      ],
      "title": "Usage",
      "type": "object"
    }
  },
  "TASK_TEXT_GENERATION_CHAT": {
    "instillShortDescription": "Provide text outputs in response to text inputs.",
    "description": "AI21labs text generation models (often called generative pre-trained transformers or large language models) have been trained to understand natural language, code, and images. The models provide text outputs in response to their inputs. The inputs to these models are also referred to as \"prompts\". Designing a prompt is essentially how you \u201cprogram\u201d a large language model model, usually by providing instructions or some examples of how to successfully complete a task.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "prompt",
        "model-name"
      ],
      "instillUIOrder": 0,
      "properties": {
        "chat-history": {
          "description": "Incorporate external chat history, specifically previous messages within the conversation. Please note that System Message will be ignored and will not have any effect when this field is populated. Each message should adhere to the format: : {\"role\": \"The message role, i.e. 'system', 'user' or 'assistant'\", \"content\": \"message content\"}.",
          "instillAcceptFormats": [
            "structured/chat-messages"
          ],
          "instillShortDescription": "Incorporate external chat history, specifically previous messages within the conversation. (Note: Anthropic doesn't support sending images via image-url, use the 'prompt-images' field instead)",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "$ref": "#/$defs/chat-message"
          },
          "title": "Chat history",
          "type": "array"
        },
        "max-new-tokens": {
          "default": 50,
          "description": "The maximum number of tokens for model to generate",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Max new tokens",
          "type": "integer"
        },
        "model-name": {
          "enum": [
            "jamba-instruct"
          ],
          "example": "jamba-instruct",
          "description": "The AI21labs model to be used",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value"
          ],
          "instillCredentialMap": {
            "values": [
              "jamba-instruct-preview"
            ],
            "targets": [
              "setup.api-key"
            ]
          },
          "title": "Model Name",
          "type": "string"
        },
        "prompt": {
          "description": "The prompt text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Prompt",
          "type": "string"
        },
        "prompt-images": {
          "description": "The prompt images (Note: Not supported by AI21labs Models)",
          "instillAcceptFormats": [
            "array:image/*"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "type": "string"
          },
          "title": "Prompt Images",
          "type": "array"
        },
        "seed": {
          "description": "The seed (Note: Not supported by AI21labs Models)",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Seed",
          "type": "integer"
        },
        "system-message": {
          "default": "You are a helpful assistant.",
          "description": "The system message helps set the behavior of the assistant. For example, you can modify the personality of the assistant or provide specific instructions about how it should behave throughout the conversation. By default, the model\u2019s behavior is set using a generic message as \"You are a helpful assistant.\"",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "The system message helps set the behavior of the assistant",
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "System message",
          "type": "string"
        },
        "temperature": {
          "default": 0.7,
          "description": "The temperature for sampling",
          "instillAcceptFormats": [
            "number"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Temperature",
          "type": "number"
        },
        "top-k": {
          "default": 10,
          "description": "Top k for sampling (Note: Not supported by AI21labs Models)",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Top K",
          "type": "integer"
        },
        "top-p": {
          "default": 0.7,
          "description": "Top p for sampling",
          "instillAcceptFormats": [
            "number"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Top P",
          "type": "number"
        },
        "n": {
          "default": 1,
          "description": "Numbers of responses to generate",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "N",
          "type": "integer"
        }
      },
      "required": [
        "prompt",
        "model-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "description": "Model Output",
          "instillUIOrder": 0,
          "instillFormat": "string",
          "instillUIMultiline": true,
          "title": "Text",
          "type": "string"
        },
        "usage": {
          "$ref": "#/$defs/usage"
        }
      },
      "required": [
        "text"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CONTEXTUAL_ANSWERING": {
    "instillShortDescription": "Contextual answers based on information passed into the prompt",
    "description": "Given a prompt containing information, ask a question about that information. The response will be limited to what the model can learn based on the provided information; information gained during model training outside the prompt will not be used in the answer.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "context",
        "question"
      ],
      "instillUIOrder": 0,
      "properties": {
        "context": {
          "description": "The context text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Context",
          "type": "string"
        },
        "question": {
          "description": "The question text",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Question",
          "type": "string"
        }
      },
      "required": [
        "context",
        "question"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillUIOrder": 0,
      "properties": {
        "answer": {
          "description": "Model Output",
          "instillUIOrder": 0,
          "instillFormat": "string",
          "title": "Answer",
          "type": "string"
        },
        "answer-in-context": {
          "description": "Whether the answer is in context",
          "instillUIOrder": 1,
          "instillFormat": "boolean",
          "title": "Answer in Context",
          "type": "boolean"
        }
      },
      "required": [
        "answer"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_SUMMARIZATION": {
    "instillShortDescription": "Summarize text content",
    "description": "AI21 Studio's summarize models offer access to our world-class summarization engine. They have been specifically developed for providing a faithful summary of documents, meeting and call transcripts, chat correspondences, and more.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "text",
        "source"
      ],
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "description": "The text content to be summarized",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Text",
          "type": "string"
        },
        "focus": {
          "description": "The focus of the summary",
          "instillAcceptFormats": [
            "string"
          ],
          "default": "Give me a concise summary of the text.",
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Focus",
          "type": "string"
        },
        "source": {
          "description": "Whether the text is plain text or from a URL",
          "enum": [
            "TEXT",
            "URL"
          ],
          "example": "TEXT",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value"
          ],
          "title": "Source",
          "type": "string"
        }
      },
      "required": [
        "text",
        "source"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillUIOrder": 0,
      "properties": {
        "summary": {
          "description": "Model Output",
          "instillUIOrder": 0,
          "instillFormat": "string",
          "instillUIMultiline": true,
          "title": "Summary",
          "type": "string"
        }
      },
      "required": [
        "summary"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_TEXT_SUMMARIZATION_SEGMENT": {
    "instillShortDescription": "Summarize text content by segments",
    "description": "AI21 Studio's summarize models offer access to our world-class summarization engine. They have been specifically developed for providing a faithful summary of documents, meeting and call transcripts, chat correspondences, and more.",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "text",
        "source"
      ],
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "description": "The text content to be summarized",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Text",
          "type": "string"
        },
        "focus": {
          "description": "The focus of the summary",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIMultiline": true,
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Focus",
          "type": "string"
        },
        "source": {
          "description": "Whether the text is plain text or from a URL",
          "enum": [
            "TEXT",
            "URL"
          ],
          "example": "TEXT",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value"
          ],
          "title": "Source",
          "type": "string"
        }
      },
      "required": [
        "text",
        "source"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillUIOrder": 0,
      "properties": {
        "summerizations": {
          "instillFormat": "array:string",
          "items": {
            "instillFormat": "string",
            "title": "Summary",
            "type": "string"
          },
          "type": "array",
          "description": "Summeries for each segment of the input text",
          "instillUIOrder": 0,
          "title": "Summaries"
        },
        "segments": {
          "instillFormat": "array:string",
          "items": {
            "instillFormat": "string",
            "title": "Segemnt Text",
            "type": "string"
          },
          "type": "array",
          "description": "Origanl text for each segment of the input text",
          "instillUIOrder": 0,
          "title": "Segment Text"
        },
        "segment-htmls": {
          "instillFormat": "array:string",
          "items": {
            "instillFormat": "string",
            "title": "Segment HTML",
            "type": "string"
          },
          "type": "array",
          "description": "HTML for each segment of the input text",
          "instillUIOrder": 0,
          "title": "Segment HTML"
        },
        "types": {
          "instillFormat": "array:string",
          "items": {
            "instillFormat": "string",
            "title": "Segment Type",
            "type": "string"
          },
          "type": "array",
          "description": "Type of each segment of the input text",
          "instillUIOrder": 0,
          "title": "Segment Type"
        }
      },
      "required": [
        "summerizations"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
