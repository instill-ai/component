{
  "$defs": {
    "text": {
      "description": "Text to be chunked",
      "instillAcceptFormats": [
        "string"
      ],
      "instillUIMultiline": true,
      "instillUIOrder": 0,
      "instillUpstreamTypes": [
        "value",
        "reference",
        "template"
      ],
      "title": "Text",
      "type": "string"
    },
    "chunk-size": {
      "default": 512,
      "description": "Specifies the maximum size of each chunk in terms of the number of tokens",
      "instillAcceptFormats": [
        "integer"
      ],
      "instillUIOrder": 0,
      "instillUpstreamTypes": [
        "value",
        "reference"
      ],
      "minimum": 1,
      "title": "Chunk Size",
      "type": "integer"
    },
    "chunk-overlap": {
      "default": 100,
      "description": "Determines the number of tokens that overlap between consecutive chunks",
      "instillAcceptFormats": [
        "integer"
      ],
      "instillUIOrder": 1,
      "instillUpstreamTypes": [
        "value",
        "reference"
      ],
      "minimum": 1,
      "title": "Chunk Overlap",
      "type": "integer"
    },
    "model-name": {
      "description": "The name of the model used for token chunk strategy.",
      "enum": [
        "gpt-4",
        "gpt-3.5-turbo",
        "text-davinci-003",
        "text-davinci-002",
        "text-davinci-001",
        "text-curie-001",
        "text-babbage-001",
        "text-ada-001",
        "davinci",
        "curie",
        "babbage",
        "ada",
        "code-davinci-002",
        "code-davinci-001",
        "code-cushman-002",
        "code-cushman-001",
        "davinci-codex",
        "cushman-codex",
        "text-davinci-edit-001",
        "code-davinci-edit-001",
        "text-embedding-ada-002",
        "text-similarity-davinci-001",
        "text-similarity-curie-001",
        "text-similarity-babbage-001",
        "text-similarity-ada-001",
        "text-search-davinci-doc-001",
        "text-search-curie-doc-001",
        "text-search-babbage-doc-001",
        "text-search-ada-doc-001",
        "code-search-babbage-code-001",
        "code-search-ada-code-001",
        "gpt2"
      ],
      "instillAcceptFormats": [
        "string"
      ],
      "instillUIOrder": 2,
      "instillUpstreamTypes": [
        "value",
        "reference",
        "template"
      ],
      "title": "Model",
      "type": "string"
    },
    "encoding-name": {
      "description": "The name of the encoding used to convert text into tokens.",
      "enum": [
        "o200k_base",
        "cl100k_base",
        "p50k_base",
        "r50k_base",
        "p50k_edit"
      ],
      "instillAcceptFormats": [
        "string"
      ],
      "instillUIOrder": 3,
      "instillUpstreamTypes": [
        "value",
        "reference"
      ],
      "title": "Encoding Name",
      "type": "string"
    },
    "tokenization-model": {
      "description": "The name of the model used for tokenization",
      "enum": [
        "gpt-4o",
        "gpt-4",
        "gpt-3.5-turbo",
        "open-mixtral-8x22b",
        "open-mixtral-8x7b",
        "open-mistral-7b",
        "mistral-large-latest",
        "mistral-small-latest",
        "codestral-latest",
        "mistral-embed",
        "command-r-plus",
        "command-r",
        "command",
        "command-nightly",
        "command-light",
        "command-light-nightly",
        "embed-english-v3.0",
        "embed-multilingual-v3.0",
        "embed-english-light-v3.0",
        "embed-multilingual-light-v3.0",
        "text-davinci-003",
        "text-davinci-002",
        "text-davinci-001",
        "text-curie-001",
        "text-babbage-001",
        "text-ada-001",
        "davinci",
        "curie",
        "babbage",
        "ada",
        "code-davinci-002",
        "code-davinci-001",
        "code-cushman-002",
        "code-cushman-001",
        "davinci-codex",
        "cushman-codex",
        "text-davinci-edit-001",
        "code-davinci-edit-001",
        "text-embedding-ada-002",
        "text-similarity-davinci-001",
        "text-similarity-curie-001",
        "text-similarity-babbage-001",
        "text-similarity-ada-001",
        "text-search-davinci-doc-001",
        "text-search-curie-doc-001",
        "text-search-babbage-doc-001",
        "text-search-ada-doc-001",
        "code-search-babbage-code-001",
        "code-search-ada-code-001",
        "gpt2"
      ],
      "instillAcceptFormats": [
        "string"
      ],
      "instillUIOrder": 2,
      "instillUpstreamTypes": [
        "value",
        "reference",
        "template"
      ],
      "title": "Model",
      "type": "string"
    }
  },
  "TASK_CHUNK_TEXT": {
    "instillShortDescription": "Chunk text with different strategies",
    "input": {
      "description": "Input",
      "instillEditOnNodeFields": [
        "text",
        "strategy",
        "tokenization"
      ],
      "instillUIOrder": 0,
      "properties": {
        "text": {
          "$ref": "#/$defs/text"
        },
        "strategy": {
          "description": "Chunking strategy",
          "instillUIOrder": 1,
          "properties": {
            "setting": {
              "description": "Chunk Setting",
              "additionalProperties": true,
              "type": "object",
              "required": [
                "chunk-method"
              ],
              "oneOf": [
                {
                  "properties": {
                    "chunk-method": {
                      "const": "Token",
                      "type": "string"
                    },
                    "chunk-size": {
                      "$ref": "#/$defs/chunk-size"
                    },
                    "chunk-overlap": {
                      "$ref": "#/$defs/chunk-overlap"
                    },
                    "model-name": {
                      "$ref": "#/$defs/model-name"
                    },
                    "allowed-special": {
                      "default": [],
                      "description": "A list of special tokens that are allowed within chunks.",
                      "instillAcceptFormats": [
                        "array:string"
                      ],
                      "items": {
                        "instillUIMultiline": false,
                        "type": "string"
                      },
                      "instillUIOrder": 4,
                      "instillUpstreamTypes": [
                        "value",
                        "reference",
                        "template"
                      ],
                      "title": "Allowed Special Tokens",
                      "type": "array"
                    },
                    "disallowed-special": {
                      "default": [],
                      "description": "A list of special tokens that should not appear within chunks.",
                      "instillAcceptFormats": [
                        "array:string"
                      ],
                      "items": {
                        "instillUIMultiline": false,
                        "type": "string"
                      },
                      "instillUIOrder": 5,
                      "instillUpstreamTypes": [
                        "value",
                        "reference",
                        "template"
                      ],
                      "title": "Disallowed Special Tokens",
                      "type": "array"
                    }
                  },
                  "required": [
                    "chunk-method"
                  ],
                  "instillEditOnNodeFields": [
                    "chunk-method",
                    "chunk-size",
                    "chunk-overlap",
                    "model-name",
                    "allowed-special",
                    "disallowed-special"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "chunk-method": {
                      "const": "Recursive",
                      "type": "string"
                    },
                    "chunk-size": {
                      "$ref": "#/$defs/chunk-size"
                    },
                    "chunk-overlap": {
                      "$ref": "#/$defs/chunk-overlap"
                    },
                    "separators": {
                      "default": [],
                      "description": "A list of strings representing the separators used to split the text.",
                      "instillAcceptFormats": [
                        "array:string"
                      ],
                      "instillUIOrder": 2,
                      "items": {
                        "instillUIMultiline": false,
                        "type": "string"
                      },
                      "instillUpstreamTypes": [
                        "value",
                        "reference",
                        "template"
                      ],
                      "title": "Separators",
                      "type": "array"
                    },
                    "keep-separator": {
                      "description": "A flag indicating whether to keep the separator characters at the beginning or end of chunks",
                      "instillAcceptFormats": [
                        "boolean"
                      ],
                      "instillUIOrder": 3,
                      "instillUpstreamTypes": [
                        "value",
                        "reference",
                        "template"
                      ],
                      "title": "Keep Separator",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "chunk-method"
                  ],
                  "instillEditOnNodeFields": [
                    "chunk-method",
                    "chunk-size",
                    "chunk-overlap",
                    "separators",
                    "keep-separator"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "chunk-method": {
                      "const": "Markdown",
                      "type": "string"
                    },
                    "chunk-size": {
                      "$ref": "#/$defs/chunk-size"
                    },
                    "chunk-overlap": {
                      "$ref": "#/$defs/chunk-overlap"
                    },
                    "code-blocks": {
                      "description": "A flag indicating whether code blocks should be treated as a single unit",
                      "instillAcceptFormats": [
                        "boolean"
                      ],
                      "instillUIOrder": 3,
                      "instillUpstreamTypes": [
                        "value",
                        "reference",
                        "template"
                      ],
                      "title": "Code Blocks",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "chunk-method"
                  ],
                  "instillEditOnNodeFields": [
                    "chunk-method",
                    "chunk-size",
                    "chunk-overlap",
                    "code-blocks"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          "title": "Chunk Strategy",
          "required": [
            "setting"
          ],
          "type": "object"
        },
        "tokenization": {
          "description": "Tokenization choices",
          "instillUIOrder": 2,
          "properties": {
            "choice": {
              "description": "Tokenization choice",
              "additionalProperties": true,
              "type": "object",
              "required": [
                "tokenization-method"
              ],
              "oneOf": [
                {
                  "properties": {
                    "tokenization-method": {
                      "const": "Model",
                      "type": "string",
                      "title": "Choose by Model Name"
                    },
                    "model": {
                      "$ref": "#/$defs/tokenization-model"
                    }
                  },
                  "required": [
                    "tokenization-method",
                    "model"
                  ],
                  "instillEditOnNodeFields": [
                    "tokenization-method",
                    "model"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "tokenization-method": {
                      "const": "Encoding",
                      "type": "string",
                      "title": "Choose by Encoding Name"
                    },
                    "encoding": {
                      "$ref": "#/$defs/encoding-name"
                    }
                  },
                  "required": [
                    "tokenization-method",
                    "encoding"
                  ],
                  "instillEditOnNodeFields": [
                    "tokenization-method",
                    "encoding"
                  ],
                  "type": "object"
                },
                {
                  "properties": {
                    "tokenization-method": {
                      "const": "HuggingFace",
                      "type": "string",
                      "title": "Input Hugging Face Model Name"
                    },
                    "hugging-face-model": {
                      "description": "The name of the Hugging Face model used for tokenization.",
                      "instillAcceptFormats": [
                        "string"
                      ],
                      "instillUIOrder": 1,
                      "instillUpstreamTypes": [
                        "value",
                        "reference"
                      ],
                      "title": "Hugging Face Model Name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "tokenization-method",
                    "hugging-face-model"
                  ],
                  "instillEditOnNodeFields": [
                    "tokenization-method",
                    "hugging-face-model"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          "title": "Tokenization",
          "required": [
            "choice"
          ],
          "type": "object"
        }
      },
      "required": [
        "text",
        "strategy",
        "tokenization"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Output",
      "instillUIOrder": 0,
      "properties": {
        "chunk-num": {
          "description": "Total number of output text chunks",
          "instillUIOrder": 2,
          "instillFormat": "integer",
          "title": "Number of Text Chunks",
          "type": "integer"
        },
        "text-chunks": {
          "description": "Text chunks after splitting",
          "instillUIOrder": 1,
          "items": {
            "title": "Text Chunk",
            "description": "Text chunk after splitting",
            "properties": {
              "text": {
                "title": "Text",
                "description": "Text chunk after splitting",
                "instillFormat": "string",
                "instillUIMultiline": true,
                "type": "string"
              },
              "start-position": {
                "title": "Start Position",
                "description": "The starting position of the chunk in the original text",
                "instillFormat": "integer",
                "type": "integer"
              },
              "end-position": {
                "title": "End Position",
                "description": "The ending position of the chunk in the original text",
                "instillFormat": "integer",
                "type": "integer"
              },
              "token-count": {
                "title": "Token Count",
                "description": "Count of tokens in a chunk",
                "instillFormat": "integer",
                "type": "integer"
              }
            },
            "required": [
              "text",
              "start-position",
              "end-position",
              "token-count"
            ],
            "instillUIMultiline": true,
            "type": "object"
          },
          "title": "Text Chunks",
          "type": "array"
        },
        "token-count": {
          "description": "Total count of tokens in the original input text",
          "instillUIOrder": 0,
          "instillFormat": "integer",
          "title": "Token Count",
          "type": "integer"
        },
        "chunks-token-count": {
          "description": "Total count of tokens in the output text chunks",
          "instillUIOrder": 3,
          "instillFormat": "integer",
          "title": "Token Count Chunks",
          "type": "integer"
        }
      },
      "required": [
        "text-chunks",
        "chunk-num",
        "token-count",
        "chunks-token-count"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}