{
  "TASK_INDEX": {
    "instillShortDescription": "Index a document into Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Elasticsearch Index Name",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "data": {
          "description": "Data to be indexed",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Data"
        }
      },
      "required": [
        "index-name",
        "data"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Index operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_UPDATE": {
    "instillShortDescription": "Update a document in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Elasticsearch Index Name",
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "query": {
          "description": "Query to be used for update, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "String Query",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "type":"string",
          "title": "Query"
        },
        "filter": {
          "description": "Filter for selecting documents to update, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Filter"
        },
        "update": {
          "description": "Update data",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Update"
        }
      },
      "required": [
        "index-name",
        "update"
      ],
      "instillEditOnNodeFields": [
        "index-name",
        "query",
        "filter",
        "update"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Update operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_SEARCH": {
    "instillShortDescription": "Search for documents and vector similarity search in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "search-type":{
          "description": "Type of search to perform, elastic search will perform normal search and vector search will perform vector similarity search",
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "default": "Elastic Search",
          "instillUIOrder": 0,
          "title": "Search Type",
          "enum": [
            "Elastic Search",
            "Vector Search"
          ],
          "type": "string"
        },
        "mode": {
          "description": "Document mode to return, Hits will return documents with (_id, _index, _score), Source Only will return only documents",
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "default": "Hits",
          "instillUIOrder": 1,
          "title": "Mode",
          "enum": [
            "Hits",
            "Source Only"
          ],
          "type": "string"
        },
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Elasticsearch Index Name",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "query": {
          "description": "Query to be used for search, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "String Query",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "type":"string",
          "title": "Query"
        },
        "filter": {
          "description": "Filter for selecting documents to search or vector similarity search, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected. Additionally, if JSON value of a key is null e.g {'name':null}, then name field will be selected without any filter. For vector similarity search, make sure to create an index with dense_vector field and provide vector field name in filter e.g {'vector_field1':'vector_value1','vector_field2':'vector_value2'}",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data, support vector search",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Filter"
        },
        "size":{
          "description": "Number of documents to return, this field is optional. If empty then all documents will be returned",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Size of documents to return, optional (empty for all documents)",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Size",
          "type": "integer"
        }
      },
      "required": [
        "search-type",
        "mode",
        "index-name"
      ],
      "instillEditOnNodeFields": [
        "search-type",
        "mode",
        "index-name",
        "query",
        "filter",
        "size"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "documents": {
          "description": "Search result documents",
          "instillUIOrder": 0,
          "title": "Documents",
          "type": "array",
          "instillFormat": "array:semi-structured/json",
          "items": {
            "title": "Document",
            "instillFormat": "semi-structured/json"
          }
        },
        "status": {
          "description": "Search operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "documents",
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE": {
    "instillShortDescription": "Delete documents from Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillShortDescription": "Elasticsearch Index Name",
          "title": "Index Name",
          "type": "string"
        },
        "query": {
          "description": "Query to be used for delete, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "String Query",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "type":"string",
          "title": "Query"
        },
        "filter": {
          "description": "Filter for selecting documents to delete, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Filter"
        }
      },
      "required": [
        "index-name"
      ],
      "instillEditOnNodeFields": [
        "index-name",
        "query",
        "filter"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_INDEX":{
    "instillShortDescription": "Create an index in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillShortDescription": "Elasticsearch Index Name",
          "title": "Index Name",
          "type": "string"
        },
        "mappings": {
          "description": "Index mappings, support both vector search and non-vector search mappings, for vector search type mappings use json object with type dense_vector and dims fields, e.g {'name':{'type':'dense_vector','dims':2},'name':{'type':'text'}",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Mappings"
        }
      },
      "required": [
        "index-name",
        "mappings"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Create index operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE_INDEX":{
    "instillShortDescription": "Delete an index in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillShortDescription": "Elasticsearch Index Name",
          "title": "Index Name",
          "type": "string"
        }
      },
      "required": [
        "index-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete index operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
