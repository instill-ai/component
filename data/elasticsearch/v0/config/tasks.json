{
  "TASK_INDEX": {
    "instillShortDescription": "Index a document into Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillUIOrder": 0,
          "title": "Index Name",
          "type": "string"
        },
        "data": {
          "description": "Data to be indexed",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Data"
        }
      },
      "required": [
        "index-name",
        "data"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Index operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_UPDATE": {
    "instillShortDescription": "Update a document in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillUIOrder": 0,
          "title": "Index Name",
          "type": "string"
        },
        "query": {
          "description": "Full text search query for update task, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Full text search query, (empty for all documents)",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "type":"string",
          "title": "Query"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"query\" field, please refer to https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        },
        "filter-sql": {
          "instillShortDescription": "The filter sql to be applied to the data, if filter is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter",
          "instillUIOrder": 3,
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter SQL",
          "type": "string"
        },
        "update": {
          "description": "Update data",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Update"
        }
      },
      "required": [
        "index-name",
        "update"
      ],
      "instillEditOnNodeFields": [
        "index-name",
        "filter-sql",
        "update"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Update operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_SEARCH": {
    "instillShortDescription": "Search for documents in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "mode": {
          "description": "Document mode to return, Hits will return documents with (_id, _index, _score), Source Only will return only documents",
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "default": "Hits",
          "instillUIOrder": 0,
          "title": "Mode",
          "enum": [
            "Hits",
            "Source Only"
          ],
          "type": "string"
        },
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "query": {
          "description": "Full text search query for search task, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Full text search query, (empty for all documents)",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "type":"string",
          "title": "Query"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"query\" field, please refer to https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        },
        "filter-sql": {
          "instillShortDescription": "The filter sql to be applied to the data, if filter is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter",
          "instillUIOrder": 4,
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter SQL",
          "type": "string"
        },
        "size":{
          "description": "Number of documents to return. If empty then all documents will be returned",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Size of documents to return, (empty for all documents)",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Size",
          "type": "integer"
        },
        "fields":{
          "description": "The fields to return in the documents. If empty then all fields will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Fields to be returned, empty for all fields",
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Fields",
          "type":"array",
          "items": {
            "title":"Field",
            "type": "string"
          }
        },
        "min-score":{
          "description": "Minimum score to consider for search results. If empty then no minimum score will be considered",
          "instillAcceptFormats": [
            "number"
          ],
          "instillShortDescription": "Minimum Score",
          "instillUIOrder": 7,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Min-Score",
          "type": "number"
        }
      },
      "required": [
        "index-name"
      ],
      "instillEditOnNodeFields": [
        "index-name",
        "filter-sql"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "documents": {
          "description": "Search result documents",
          "instillUIOrder": 0,
          "title": "Documents",
          "type": "array",
          "instillFormat": "array:semi-structured/json",
          "items": {
            "title": "Document",
            "instillFormat": "semi-structured/json"
          }
        },
        "status": {
          "description": "Search operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "documents",
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_VECTOR_SEARCH": {
    "instillShortDescription": "Search for vector similarity search in Elasticsearch with CosineSimilarity algorithm",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "mode": {
          "description": "Document mode to return, Hits will return documents with (_id, _index, _score), Source Only will return only documents",
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "default": "Hits",
          "instillUIOrder": 0,
          "title": "Mode",
          "enum": [
            "Hits",
            "Source Only"
          ],
          "type": "string"
        },
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "field":{
          "description": "Field name of the vector to search for similar vectors",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Field name of the vector",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Field",
          "type": "string"
        },
        "query-vector": {
          "description": "Query vector to search for similar vectors",
          "instillAcceptFormats": [
            "array:int","array:number"
          ],
          "instillShortDescription": "",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "type":"array",
          "items": {
            "description": "A dimension of the vector",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1,
          "title": "Query Vector"
        },
        "k":{
          "description": "K of documents to do kNN vector search",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "K of documents to return",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "K",
          "type": "integer"
        },
        "num-candidates":{
          "description": "Number of candidates to be considered for kNN vector search. Default to 2 times of k",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Number of candidates to be considered for kNN, default to 2 times of k",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Num-Candidates",
          "type": "integer"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"filter\" field, please refer to https://www.elastic.co/guide/en/elasticsearch/reference/current/knn-search.html#knn-search-filter-example",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        },
        "filter-sql": {
          "instillShortDescription": "The filter sql to be applied to the data, if filter is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter",
          "instillUIOrder": 7,
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter SQL",
          "type": "string"
        },
        "fields":{
          "description": "The fields to return in the documents. If empty then all fields will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Fields to be returned, empty for all fields",
          "instillUIOrder": 8,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Fields",
          "type":"array",
          "items": {
            "title":"Field",
            "type": "string"
          }
        },
        "min-score":{
          "description": "Minimum score to consider for search results. If empty then no minimum score will be considered",
          "instillAcceptFormats": [
            "number"
          ],
          "instillShortDescription": "Minimum Score",
          "instillUIOrder": 9,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Min-Score",
          "type": "number"
        }
      },
      "required": [
        "index-name",
        "field"
      ],
      "instillEditOnNodeFields": [
        "index-name",
        "field",
        "query-vector",
        "k"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "documents": {
          "description": "Search result documents",
          "instillUIOrder": 0,
          "title": "Documents",
          "type": "array",
          "instillFormat": "array:semi-structured/json",
          "items": {
            "title": "Document",
            "instillFormat": "semi-structured/json"
          }
        },
        "status": {
          "description": "Search operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "documents",
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE": {
    "instillShortDescription": "Delete documents from Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "query": {
          "description": "Full text search query for delete task, query will be prioritised over filter if both are provided, if both query and filter are not provided, all documents will be selected",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Full text search query, (empty for all documents)",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "type":"string",
          "title": "Query"
        },
        "filter": {
          "description": "The query dsl filter which starts with \"query\" field, please refer to https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        },
        "filter-sql": {
          "instillShortDescription": "The filter sql to be applied to the data, if filter is provided, this field will be ignored",
          "description": "The filter to be applied to the data with SQL syntax, which starts with WHERE clause, empty for no filter",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "required": [],
          "title": "Filter SQL",
          "type": "string"
        }
      },
      "required": [
        "index-name"
      ],
      "instillEditOnNodeFields": [
        "index-name",
        "filter-sql"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_INDEX":{
    "instillShortDescription": "Create an index in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "instillUIOrder": 0,
          "title": "Index Name",
          "type": "string"
        },
        "mappings": {
          "description": "Index mappings which starts with {\"mappings\":{\"properties\"}} field, please refer to https://www.elastic.co/guide/en/elasticsearch/reference/current/dense-vector.html for vector search and https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html for other mappings",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Mappings"
        }
      },
      "required": [
        "index-name",
        "mappings"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Create index operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE_INDEX":{
    "instillShortDescription": "Delete an index in Elasticsearch",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "index-name": {
          "description": "Name of the Elasticsearch index",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference",
            "template"
          ],
          "title": "Index Name",
          "type": "string"
        }
      },
      "required": [
        "index-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete index operation status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
