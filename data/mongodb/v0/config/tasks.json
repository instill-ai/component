{
  "TASK_INSERT": {
    "instillShortDescription": "Perform an insert operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "data": {
          "description": "The data to be inserted",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Data"
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "data"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Insert status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_FIND": {
    "instillShortDescription": "Perform a find operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "filter": {
          "description": "The filter to find documents, this field is optional, support mongodb query, please refer to the documentations https://www.mongodb.com/docs/manual/reference/operator/query/",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data, optional (empty for all documents), support mongodb query",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        },
        "limit":{
          "description": "The number of documents to return. If empty then all documents will be returned",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Limit the documents, (empty for all documents)",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Limit",
          "type": "integer"
        },
        "fields":{
          "description": "The fields to return in the documents. If empty then all fields will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Fields to be returned, (empty for all fields)",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Fields",
          "type":"array:string",
          "items": {
            "title":"Field",
            "type": "string"
          }
        }
      },
      "required": [
        "database-name",
        "collection-name"
      ],
      "instillEditOnNodeFields":[
        "database-name",
        "collection-name",
        "filter"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Find status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        },
        "documents": {
          "description": "The documents returned from the find operation",
          "instillEditOnNodeFields": [],
          "instillUIOrder": 0,
          "required": [],
          "title": "Documents",
          "type": "array",
          "instillFormat": "array:semi-structured/json",
          "items": {
            "title": "Document",
            "instillFormat": "semi-structured/json"
          }
        }
      },
      "required": [
        "status",
        "documents"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_UPDATE": {
    "instillShortDescription": "Perform an update operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "filter": {
          "description": "The filter to update documents, support mongodb query, please refer to the documentations https://www.mongodb.com/docs/manual/reference/operator/query/",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data, support mongodb query",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        },
        "update-data": {
          "description": "The updated data to be applied to the documents",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Update"
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "filter",
        "update-data"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Update status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DELETE": {
    "instillShortDescription": "Perform a delete operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "filter": {
          "description": "The filter to delete documents, support mongodb query, please refer to the documentations https://www.mongodb.com/docs/manual/reference/operator/query/",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data, support mongodb query",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "filter"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DROP_COLLECTION":{
    "instillShortDescription": "Delete the collection",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        }
      },
      "required": [
        "database-name",
        "collection-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete collection status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DROP_DATABASE":{
    "instillShortDescription": "Delete the database",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        }
      },
      "required": [
        "database-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete database status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_CREATE_SEARCH_INDEX":{
    "instillShortDescription": "Create a search index",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "index-name":{
          "description": "The name of the index to be created",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Name",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "index-type":{
          "description": "The type of the index to be created",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Type",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "enum": [
            "search",
            "vectorSearch"
          ],
          "title": "Index Type",
          "type": "string"
        },
        "syntax":{
          "description": "The syntax structure of the search index, please refer to the MongoDB documentation for more information. search https://www.mongodb.com/docs/atlas/atlas-search/create-index/. vectorSearch https://www.mongodb.com/docs/atlas/atlas-vector-search/vector-search-type/",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "Syntax Structure, vectorSearch {\"fields\":{\"type\": \"vector\",\"path\": <field-to-index>,\"numDimensions\": <number-of-dimensions>,\"similarity\": \"euclidean | cosine | dotProduct\"}}, search { \"mappings\": { \"dynamic\": <boolean>, \"fields\": { <field-definition> } }}",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Syntax"
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "index-type",
        "index-name",
        "syntax"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Create index status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_DROP_SEARCH_INDEX":{
    "instillShortDescription": "Drop a search index",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "index-name": {
          "description": "The name of the index to be deleted",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Name",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Index Name",
          "type": "string"
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "index-name"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Delete index status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_VECTOR_SEARCH":{
    "instillShortDescription": "Perform a vector search operation",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "database-name": {
          "description": "Fill in your MongoDB database name",
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "title": "Database Name",
          "type": "string"
        },
        "collection-name": {
          "description": "The name of the collection in the MongoDB database",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Collection Name",
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "index-name": {
          "description": "The name of the index to be used for vector search",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Index Name",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Index Name",
          "type": "string"
        },
        "query-vector": {
          "description": "The query vector to be used for vector search",
          "instillAcceptFormats": [
            "array:number", "array:integer"
          ],
          "instillShortDescription": "Query Vector",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Query Vector",
          "type": "array",
          "items": {
            "description": "A dimension of the vector",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1
        },
        "exact": {
          "description": "The exact value for vector search. If true, then ENN search will be performed, otherwise ANN search will be performed. Default to false",
          "instillAcceptFormats": [
            "boolean"
          ],
          "instillShortDescription": "Exact Search, true for ENN search, false for ANN search",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Exact",
          "type": "boolean",
          "default": false
        },
        "limit": {
          "description": "Limit the documents to be returned",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Limit Documents",
          "instillUIOrder": 5,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Limit",
          "type": "integer"
        },
        "num-candidates": {
          "description": "The number of candidates to the field to be used for vector search. Default to 3 times limit",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Number of Candidates, default to 3 times limit",
          "instillUIOrder": 6,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Number of Candidates",
          "type": "integer"
        },
        "path": {
          "description": "The path to the field to be used for vector search",
          "instillAcceptFormats": [
            "string"
          ],
          "instillShortDescription": "Path, need to first create vectorSearch search index",
          "instillUIOrder": 7,
          "instillUpstreamTypes": [
            "reference",
            "value"
          ],
          "title": "Path",
          "type": "string"
        },
        "filter": {
          "description": "The filter to be used for vector search, need to first create filter vectorSearch search index, support mongodb query, please refer to the documentations https://www.mongodb.com/docs/manual/reference/operator/query/ to be used for vector search",
          "instillAcceptFormats": [
            "semi-structured/*","structured/*","object"
          ],
          "instillShortDescription": "JSON Data, support mongodb query, (empty for all documents)",
          "instillUIOrder": 8,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Filter"
        },
        "fields":{
          "description": "The fields to return in the documents. If empty then all fields will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Fields to be returned, (empty for all fields)",
          "instillUIOrder": 9,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Fields",
          "type":"array:string",
          "items": {
            "title":"Field",
            "type": "string"
          }
        }
      },
      "required": [
        "database-name",
        "collection-name",
        "index-name",
        "query-vector",
        "path",
        "limit"
      ],
      "title": "Input",
      "type": "object"
    },
    "output":{
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Vector search status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        },
        "documents": {
          "description": "The documents returned from the vector search operation",
          "instillEditOnNodeFields": [],
          "instillUIOrder": 0,
          "required": [],
          "title": "Documents",
          "type": "array",
          "instillFormat": "array:semi-structured/json",
          "items": {
            "title": "Document",
            "instillFormat": "semi-structured/json"
          }
        }
      },
      "required": [
        "status",
        "documents"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}