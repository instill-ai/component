{
  "TASK_VECTOR_SEARCH": {
    "instillShortDescription": "Retrieve the ids of the most similar items in a namespace, along with their similarity scores.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name":{
          "description": "The name of the collection to perform vector search on",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "vector": {
          "description": "An array of dimensions for the vector query",
          "instillAcceptFormats": [
            "array:number",
            "array:integer"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "description": "A dimension of the vector",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1,
          "title": "Vector",
          "type": "array"
        },
        "limit": {
          "description": "The limit of objects, empty for all rows",
          "instillAcceptFormats": [
            "integer"
          ],
          "instillShortDescription": "Limit Rows",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Limit",
          "type":"integer"
        },
        "fields":{
          "description": "The fields to return in the objects. If empty then all fields will be returned",
          "instillAcceptFormats": [
            "array:string"
          ],
          "instillShortDescription": "Fields to be returned, empty for all fields",
          "instillUIOrder": 3,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "title": "Fields",
          "type":"array",
          "items": {
            "title":"Field",
            "type": "string"
          }
        },
        "filter": {
          "description": "The properties filter to be applied to the data with GraphQL queries, which starts with WHERE field, please refer to https://weaviate.io/developers/weaviate/search/filters",
          "instillUIOrder": 4,
          "instillUpstreamTypes": [
            "reference",
            "template",
            "value"
          ],
          "instillAcceptFormats":[
            "string"
          ],
          "title": "Filter",
          "type": "string"
        }
      },
      "required": [
        "collection-name",
        "vector"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Upsert status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        },
        "objects": {
          "description": "The objects returned from the vector search operation",
          "instillUIOrder": 1,
          "required": [],
          "title": "Objects",
          "type": "array",
          "instillFormat": "array:semi-structured/json",
          "items": {
            "title": "Object",
            "instillFormat": "semi-structured/json"
          }
        }
      },
      "required": [
        "status",
        "objects"
      ],
      "title": "Output",
      "type": "object"
    }
  },
  "TASK_UPSERT": {
    "instillShortDescription": "Writes vectors into a namespace. If a new value is upserted for an existing vector id, it will overwrite the previous value.",
    "input": {
      "instillUIOrder": 0,
      "properties": {
        "collection-name":{
          "description": "The name of the collection to upsert the object into",
          "instillAcceptFormats": [
            "string"
          ],
          "instillUIOrder": 0,
          "instillUpstreamTypes": [
            "value",
            "reference"
          ],
          "title": "Collection Name",
          "type": "string"
        },
        "vector": {
          "description": "An array of dimensions for the vector value",
          "instillAcceptFormats": [
            "array:number",
            "array:integer"
          ],
          "instillUIOrder": 1,
          "instillUpstreamTypes": [
            "reference"
          ],
          "items": {
            "description": "A dimension of the vector",
            "example": 0.8167237,
            "type": "number"
          },
          "minItems": 1,
          "title": "Vector",
          "type": "array"
        },
        "properties": {
          "description": "The vector properties/metadata",
          "instillAcceptFormats": [
            "semi-structured/object"
          ],
          "instillShortDescription": "The vector properties/metadata",
          "instillUIOrder": 2,
          "instillUpstreamTypes": [
            "reference"
          ],
          "order": 1,
          "required": [],
          "title": "Metadata",
          "type": "object"
        }
      },
      "required": [
        "collection-name",
        "vector",
        "properties"
      ],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "instillUIOrder": 0,
      "properties": {
        "status": {
          "description": "Upsert status",
          "instillFormat": "string",
          "required": [],
          "instillUIOrder": 0,
          "title": "Status",
          "type": "string"
        }
      },
      "required": [
        "status"
      ],
      "title": "Output",
      "type": "object"
    }
  }
}
